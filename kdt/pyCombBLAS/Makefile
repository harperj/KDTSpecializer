INCDIR = $(HOME)
INCADD = -I$(INCDIR) -I/usr/include/python2.7
COMBBLAS = ../../CombBLAS

# notes for configure:
# -fno-exceptions does not work with MPICH2
# -fno-rtti does not work with tr1:tuples

OPT = -DNDEBUG -O2 -DMPICH_IGNORE_CXX_SEEK -Wreturn-type -w -D__STDC_CONSTANT_MACROS -D__STDC_LIMIT_MACROS    
DEB = -g -O0 -fno-inline -DMPICH_IGNORE_CXX_SEEK -DTR1 #-DDEBUG
COMPILER = mpicxx
FLAGS = $(OPT) -fPIC

ifdef DYNFILE
SWIGDYN = -ltest.i
DYNOBJ = $(DYNFILE).o
DYNCPP = $(DYNFILE).cpp
DYNH = $(DYNFILE).h
endif


all: pyCombBLAS.py

pyCombBLAS.i: pyCombBLAS.i.templ pyObjDenseParVec.h pyDenseParVec.h pySpParVec.h pySpParMat.h pySpParMatBool.h pyOperations.h pyCombBLAS.h  $(DYNH)
	python makei.py pyCombBLAS.i.templ pyCombBLAS.i

pyCombBLAS_wrap.cpp: pyCombBLAS.i
		swig -python -c++ $(SWIGDYN) -shadow -o pyCombBLAS_wrap.cpp pyCombBLAS.i

pyCombBLAS_wrap.o: pyCombBLAS_wrap.cpp
	$(COMPILER) $(INCADD) $(FLAGS) -c $< -o $@ $(DYNOBJ)

%.o : %.cpp %.h
	$(COMPILER) $(INCADD) $(FLAGS) -c $< -o $@

ifdef DYNFILE
$(DYNFILE).o: $(DYNFILE).cpp $(DYNFILE).h
	$(COMPILER) $(INCADD) $(FLAGS) -c $< -o $@
endif

# The rules below create a CombBLAS statically linked library for the non-templated functions.
# Maybe we should move this to CombBLAS?

CommGrid.o:	$(COMBBLAS)/CommGrid.cpp $(COMBBLAS)/CommGrid.h
	$(COMPILER) $(INCADD) $(FLAGS) -c -o CommGrid.o $(COMBBLAS)/CommGrid.cpp

MPIType.o:	$(COMBBLAS)/MPIType.cpp $(COMBBLAS)/MPIType.h
	$(COMPILER) $(INCADD) $(FLAGS) -c -o MPIType.o $(COMBBLAS)/MPIType.cpp

MemoryPool.o:	$(COMBBLAS)/MemoryPool.cpp $(COMBBLAS)/SpDefs.h
	$(COMPILER) $(INCADD) $(FLAGS) -c -o MemoryPool.o $(COMBBLAS)/MemoryPool.cpp	

libCombBLAS.a: CommGrid.o MPIType.o MemoryPool.o
	ar rcs libCombBLAS.a CommGrid.o MPIType.o MemoryPool.o 

$(COMBBLAS)/graph500-1.2/generator/libgraph_generator_seq.a:
	$(MAKE) -C $(COMBBLAS)/graph500-1.2/generator

_pyCombBLAS.so: $(DYNOBJ) pyCombBLAS.o pySpParMat.o pySpParMatBool.o pySpParVec.o pyDenseParVec.o pyObjDenseParVec.o pyOperations.o pyOperations.h pyCombBLAS_wrap.o libCombBLAS.a $(COMBBLAS)/graph500-1.2/generator/libgraph_generator_seq.a
	$(COMPILER) $(INCADD) $(FLAGS) -shared -o _pyCombBLAS.so pyCombBLAS.o pySpParMat.o pySpParMatBool.o pySpParVec.o pyDenseParVec.o pyObjDenseParVec.o pyOperations.o pyCombBLAS_wrap.o $(DYNOBJ) -L. -lCombBLAS -L$(COMBBLAS)/graph500-1.2/generator -lgraph_generator_seq
	cp -f _pyCombBLAS.so ..
	cp -f pyCombBLAS.py ..

# the swig command that creates DiGraph_wrap.cpp also creates DiGraph.py
pyCombBLAS.py:	_pyCombBLAS.so



clean:
	rm -f *.so
	rm -f *.o
	rm -f *.a
	rm -f *.pyc
	rm -f pyCombBLAS_wrap.cpp
	rm -f pyCombBLAS.py
	rm -f pyCombBLAS.i

cleanout:
	rm out.*
	rm err.*

